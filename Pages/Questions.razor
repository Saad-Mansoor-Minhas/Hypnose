@inject NavigationManager nm

@{
    int choiceIndex = 0;

}
@foreach (var choice in QuestionsChoice[2].Choices)
{
    @if (@choice == "freetext")
    {
        <input type="text"
       name="@QuestionNo"
       id="@choiceIndex"
       @bind-value="@name" />
        <button class="btn btn-sm btn-primary" @onclick="@(() => UpdateChoice(name))">
            OK
        </button>
        <br />
        choiceIndex++;

    }
    else
    {
        <input @onchange="@(() => UpdateChoice(choice))"
       type="radio"
       class="form-check-input"
       name="@QuestionNo"
       id="@choiceIndex"
       autocomplete="off"
       value="@choiceIndex"
       checked="@(QuestionNo)" />
        <label class="form-check-label" for="@choiceIndex">@choice</label>
        <br />
        choiceIndex++;


    }

}
<span class="text-black-50">Your answer is</span> : <span class="text-success"> @choice1</span>
@code {


    [Parameter]
    public List<Hypnos.Data.HypnosQuestion>? QuestionsChoice { get; set; }
    [Parameter]
    public string? QuestionNo { get; set; }
    public string? choice1 { get; set; }
    public int Qn { get; set; }
    [Parameter]
    public EventCallback<string> SetChoice { get; set; }

    protected async Task UpdateChoice(string choice)
    {
        choice1 = choice;


        await SetChoice.InvokeAsync(choice);


        StateHasChanged();
    }

    public string? name { get; set; }


}